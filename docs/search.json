[
  {
    "objectID": "posts/warming_stripes/Warming_Stripes_Makie.html",
    "href": "posts/warming_stripes/Warming_Stripes_Makie.html",
    "title": "My Blog",
    "section": "",
    "text": "In this quick tutorial we learn how to create warming stripes similar to those available at showyourstripes.info.\nAlso, this tutorial serves as an opportunity to become familiar with the Julia programming language and some of its packages.\nOur goal is to get as close as possible to the visual appearance of the famous warming stripes.\nWe will use Julia to access and visualize annual air temperature data for Germany provided by Deutscher Wetterdienst.\nFirst, some packages for data handling, processing and visualization have to be loaded.\nWe will download a large CSV file from the web. To this end, we need the packages CSV and Downloads. Further, we store the data in some kind of a database provided by DataFrames.\nFor the processing of the data we need some statistical quantities from the standard Statistics package.\nThe package RollingFunctions provides tools to smooth temporal data using windowed averages.\nFinally, we create a custom colormap and plot the data with the Makie package.\n\nusing CSV\nusing Downloads\nusing DataFrames\n\nusing Statistics\nusing RollingFunctions\n\nusing ColorSchemes\nusing CairoMakie\n\n\n\nTo get close to the visual style of the warming stripes charts by Ed Hawking, we define a customized colormap.\nThe original color palette from Wikipedia provides the required color codes for the blue-white-red colormap.\n\nwstripesmap = cgrad([\n        \"#08306b\", \"#08519c\", \"#2171b5\", \"#4292c6\", \n        \"#6baed6\", \"#9ecae1\", \"#c6dbef\", \"#deebf7\",\n        \"#ffffff\",\n        \"#fee0d2\", \"#fcbba1\", \"#fc9272\", \"#fb6a4a\",\n        \"#ef3b2c\", \"#cb181d\", \"#a50f15\", \"#67000d\"],\n    categorical=true);\nwstripesmap\n\n\n\n\n\n\n\nWe load data from a URL and store everything in a database structure known as a DataFrame.\n\nurl = \"https://opendata.dwd.de/climate_environment/CDC/regional_averages_DE/annual/air_temperature_mean/regional_averages_tm_year.txt\"\nhttp_response = Downloads.download(url)\ndf = CSV.File(http_response, header=2, delim=\";\") |> DataFrame;\n\n\n\n\nAs a baseline we need the average over sufficiently many years. We choose temperature data from the years 1971 to 2000 and calculate the mean temperature.\nFurther, we need the standard deviation of the long-term temperature data from 1901 to 2000.\nA smoothed data set based on a running mean is generated with an averaging window of 30 years length.\n\ndf_baseline = filter(row -> (row.Jahr > 1970) & (row.Jahr < 2001), df)\nwhere = \"Deutschland\"\ncol = df_baseline[!, where];\nmw = mean(col)\n\ndf_longterm = filter(row -> (row.Jahr > 1900) & (row.Jahr < 2001), df)\ncol = df_longterm[!, where];\nsd = std(col)\n\ndata = df[!, where] .- mw;\nm_data = runmean(data, 30);\n\n\n\n\nIn the following code cell, we use Makie to generate a bar chart with annual temperature data relative to the baseline average of 1971 to 2000. The colormap is scaled to +/- 2.6 times the standard deviation of the long-term data from 1901 to 2000 (see How have these graphics been made? in the FAQ at showyourstripes.info).\nWe add as white line the smoothed temperature obtained by calculating running averages with a time window of 30 years length.\nThere is no doubt that the average temperature relative to the baseline data is approaching far more than 1.5 K (or 1.5 °C as it is commonly communicated) for the recent two decades since year 2000.\n\nset_theme!(theme_black())\nfig = Figure(resolution = (1000, 540), fonts = (; regular= \"sans\"))\nax = Axis(fig[1, 1], \n    title = \"Temperature change in Germany relative to average of 1970-2001\",\n    ylabel = \"K\",\n    xautolimitmargin = (0.02,0.02),\n    yautolimitmargin = (0.02,0.02))\nbarplot!(ax, df.Jahr, data; width=1, gap=0, \n    strokewidth = 0.5, strokecolor = data,\n    color = data, \n    colorrange = (-2.6 * sd, +2.6 * sd),\n    colormap = wstripesmap)\nlines!(ax, df.Jahr, m_data, color=:white)\ntext!(\"Data source: http://opendata.dwd.de\\n\" * \n    \"https://showyourstripes.info by Ed Hawkins, University of Reading, UK\", \n    fontsize=10,\n    align=(:left, :center),\n    position = (1880, -1.84))\ntext!(\"The white curve indicates a running average\\n\" *\n    \"with a window length of 30 years.\",\n    fontsize = 10,\n    align=(:left, :center),\n    position=(1990, -1.84))\nfig\n\n\n\n\nThe next cell generates the well-known warming stripes for Germany.\n\nset_theme!(theme_minimal())\nfig = Figure(resolution = (780, 120))\nax = Axis(fig[1, 1],\nbackgroundcolor = :transparent,\n        leftspinevisible = false,\n        rightspinevisible = false,\n        bottomspinevisible = false,\n        topspinevisible = false,\n        xticklabelsvisible = false, \n        yticklabelsvisible = false,\n        xgridcolor = :transparent,\n        ygridcolor = :transparent,\n        xminorticksvisible = false,\n        yminorticksvisible = false,\n        xticksvisible = false,\n        yticksvisible = false,\n        xautolimitmargin = (0.0,0.0),\n        yautolimitmargin = (0.0,0.0),)\nhidedecorations!(ax)\nax.titlevisible=false\nhmap = heatmap!(df.Jahr, ones(size(df.Jahr)), data;\n    colorrange = (-2.6 * sd, +2.6 * sd), \n    colormap = wstripesmap)\nfig"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to my blog",
    "section": "",
    "text": "Tutorial: How to generate your own warming stripes using Julia\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n2022 annual emission of CO₂\n\n\n\n\n\n\n\nscience\n\n\n\n\n\n\n\n\n\n\n\nJan 12, 2023\n\n\nRalph-Uwe Börner\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is Bayesian inference\n\n\n\n\n\n\n\nscience\n\n\nchatgpt\n\n\n\n\n\n\n\n\n\n\n\nDec 2, 2022\n\n\nRalph-Uwe Börner\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeophysical inversion\n\n\n\n\n\n\n\ncode\n\n\npython\n\n\ngeophysics\n\n\n\n\n\n\n\n\n\n\n\nNov 24, 2022\n\n\nRalph-Uwe Börner\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeodetic coordinate transforms with Julia\n\n\n\n\n\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\n\n\nOct 26, 2022\n\n\nRalph-Uwe Börner\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\n\n\nSep 30, 2022\n\n\nRalph-Uwe Börner\n\n\n\n\n\n\n  \n\n\n\n\nWelcome to my Blog\n\n\n\n\n\n\n\nquarto\n\n\n\n\n\n\n\n\n\n\n\nSep 30, 2022\n\n\nRalph-Uwe Börner\n\n\n\n\n\n\n  \n\n\n\n\nQuarto and Julia\n\n\n\n\n\n\n\ncode\n\n\njulia\n\n\n\n\n\n\n\n\n\n\n\nSep 30, 2022\n\n\nRalph-Uwe Börner\n\n\n\n\n\n\n  \n\n\n\n\nJupyter example\n\n\n\n\n\n\n\ncode\n\n\njupyter\n\n\nquarto\n\n\n\n\n\n\n\n\n\n\n\nSep 29, 2022\n\n\nRalph-Uwe Börner\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/CO₂/index.html",
    "href": "posts/CO₂/index.html",
    "title": "2022 annual emission of CO₂",
    "section": "",
    "text": "According to the World Economic Forum, global CO₂ emissions from fossil fuels hits a record high in 2022 (link).\nThe fossil fuel based emissions in 2022 are estimated to remain at a high level of about 36.6 Gt/a.\nTo put the numbers into perspective, David Ho has proposed a time machine which takes us back a certain amount of time relativ to the annual CO₂ emission.\nWhat is CCS (Carbon Capture and Storage) able to contribute?\nThe Global CCS Institute reports a 44% increase of all CCS facilities under development with a projected total of 244 Mt/a. However, only 30 facilities were in operation and were able to capture 42.58 Mt/a.\nUsing David’s time machine idea, this is equivalent to about 10 hours of the annual CO₂ emission.\nIf all projected facilities were in operation, these 244 Mt/a would equal 2.4 days of annual emissions."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome to my Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog.\n\n\nRecently, I discovered Quarto, which offers a functionality that I was missing in other tools.\n\n\n\n\nFirst and foremost, using Quarto one can easily deploy a website, a blog post, a presentation, a static html page, or you name it.\nThis blog is a Quarto project which I edit in RStudio.\nIts sources are hosted at GitHub and deployed as a static site using GitHub Pages."
  }
]