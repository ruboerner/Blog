<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>My Blog</title>
<link>https://ruboerner.github.io/Blog/index.html</link>
<atom:link href="https://ruboerner.github.io/Blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.253</generator>
<lastBuildDate>Tue, 25 Oct 2022 22:00:00 GMT</lastBuildDate>
<item>
  <title>Geodetic coordinate transforms with Julia</title>
  <dc:creator>Ralph-Uwe B√∂rner</dc:creator>
  <link>https://ruboerner.github.io/Blog/posts/coordinates/index.html</link>
  <description><![CDATA[ 




<p>This blog post is about geodetic coordinate transforms using the <code>Julia</code> programming language.</p>
<p>In applied geophysics, the following question comes up frequently:</p>
<div class="callout-important callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Problem üíª
</div>
</div>
<div class="callout-body-container callout-body">
<p>How can I transform geographical coordinates given as ‚Äú<code>latitude, longitude</code>‚Äù into some other coordinate system, e.g., UTM?</p>
</div>
</div>
<p>The <code>Julia</code> package <code>Proj.jl</code> offers all functionality that is required.</p>
<p>After installing the package using <code>Julia</code>‚Äôs package manager from the REPL, we are ready to go:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb1-1"><span class="im" style="color: #00769E;">using</span> <span class="bu" style="color: null;">Proj</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;">using</span> <span class="bu" style="color: null;">DataFrames</span>, <span class="bu" style="color: null;">CSV</span></span></code></pre></div>
</div>
<p>Let‚Äôs assume that we have downloaded a set of coordinates from a handheld GPS receiver. The content of the data file <code>coords.dat</code> may look like this:</p>
<pre class="shell"><code># lat, lon
50.924833, 13.330562
50.982648, 13.530406</code></pre>
<p>We first read in the data:</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb3-1">df <span class="op" style="color: #5E5E5E;">=</span> <span class="fu" style="color: #4758AB;">DataFrame</span>(CSV.<span class="fu" style="color: #4758AB;">File</span>(<span class="st" style="color: #20794D;">"coords.dat"</span>, delim<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">","</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">

<div><div style="float: left;"><span>2√ó2 DataFrame</span></div><div style="clear: both;"></div></div><div class="data-frame" style="overflow-x: scroll;"><table class="data-frame table table-sm table-striped" style="margin-bottom: 6px;"><thead><tr class="header"><th class="rowNumber" style="font-weight: bold; text-align: right;">Row</th><th style="text-align: left;"># lat</th><th style="text-align: left;"> lon</th></tr><tr class="subheader headerLastRow"><th class="rowNumber" style="font-weight: bold; text-align: right;"></th><th title="Float64" style="text-align: left;">Float64</th><th title="Float64" style="text-align: left;">Float64</th></tr></thead><tbody><tr><td class="rowNumber" style="font-weight: bold; text-align: right;">1</td><td style="text-align: right;">50.9248</td><td style="text-align: right;">13.3306</td></tr><tr><td class="rowNumber" style="font-weight: bold; text-align: right;">2</td><td style="text-align: right;">50.9826</td><td style="text-align: right;">13.5304</td></tr></tbody></table></div>
</div>
</div>
<p>Next we arrange the data such that it is suitable for processing with <code>Proj.jl</code>:</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb4-1">latlon <span class="op" style="color: #5E5E5E;">=</span> <span class="fu" style="color: #4758AB;">Array</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>2√ó2 Matrix{Float64}:
 50.9248  13.3306
 50.9826  13.5304</code></pre>
</div>
</div>
<p>The following step is essential. Since we transform data from one coordinate system into another, we have to inform <code>Proj.jl</code> about the source and target systems. To this end, we exploit the convenient EPSG codes.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb6-1">trans <span class="op" style="color: #5E5E5E;">=</span> Proj.<span class="fu" style="color: #4758AB;">Transformation</span>(<span class="st" style="color: #20794D;">"EPSG:4326"</span>, <span class="st" style="color: #20794D;">"EPSG:25833"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>Transformation
    source: WGS 84
    target: ETRS89 / UTM zone 33N
    direction: forward</code></pre>
</div>
</div>
<p>The next lines will finally transform our GPS coordinates into UTM zone 33 coordinates which we refer to as <em>easting</em> and <em>northing</em>:</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb8-1">etrs <span class="op" style="color: #5E5E5E;">=</span> [<span class="fu" style="color: #4758AB;">trans</span>(latlon[i, <span class="op" style="color: #5E5E5E;">:</span>]) for i <span class="kw" style="color: #003B4F;">in</span> <span class="fl" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">size</span>(latlon, <span class="fl" style="color: #AD0000;">1</span>)]</span>
<span id="cb8-2">UTM <span class="op" style="color: #5E5E5E;">=</span> <span class="fu" style="color: #4758AB;">hcat</span>(<span class="fu" style="color: #4758AB;">collect</span>.(etrs)<span class="op" style="color: #5E5E5E;">...</span>);</span>
<span id="cb8-3"></span>
<span id="cb8-4">easting <span class="op" style="color: #5E5E5E;">=</span> UTM[<span class="fl" style="color: #AD0000;">1</span>, <span class="op" style="color: #5E5E5E;">:</span>]</span>
<span id="cb8-5">northing <span class="op" style="color: #5E5E5E;">=</span> UTM[<span class="fl" style="color: #AD0000;">2</span>, <span class="op" style="color: #5E5E5E;">:</span>]</span>
<span id="cb8-6"><span class="pp" style="color: #AD0000;">@show</span> easting</span>
<span id="cb8-7"><span class="pp" style="color: #AD0000;">@show</span> northing;</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>easting = [382670.42457542894, 396843.0546304857]
northing = [5.642793241297958e6, 5.648923257065745e6]</code></pre>
</div>
</div>



 ]]></description>
  <category>code</category>
  <category>julia</category>
  <guid>https://ruboerner.github.io/Blog/posts/coordinates/index.html</guid>
  <pubDate>Tue, 25 Oct 2022 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Quarto and Julia</title>
  <dc:creator>Ralph-Uwe B√∂rner</dc:creator>
  <link>https://ruboerner.github.io/Blog/posts/Julia-and-Quarto/index.html</link>
  <description><![CDATA[ 




<section id="why-mix-julia-and-quarto" class="level1">
<h1>Why mix Julia and Quarto?</h1>
<p>There are quite a few development environments available for Julia, e.g., <a href="https://code.visualstudio.com">Visual Studio Code</a>, <a href="https://jupyter.org">Jupyter</a>, <a href="https://github.com/fonsp/Pluto.jl">Pluto.jl</a>.</p>
<p>All of the above can be used to develop code or implement and test ideas. The main difference is the intended workflow.</p>
<p>For the purpose of teaching, until now I prefer Pluto.jl notebooks.</p>
<p>However, even though exporting the final Pluto Notebook is possible without problems, the design of the exported HTML or PDF page cannot be altered. Further, there is no straightforward way to easily deploy a slide show presentation directly out of your notebook.</p>
<p>There exist, however, <em>literate programming</em> tools that are able to generate, e.g., a tutorial or a documentation by parsing comments in the Julia source files ‚Äî see, e.g.,</p>
<ul>
<li>Documenter.jl</li>
<li>Literate.jl</li>
<li>Franklin.jl</li>
<li>Publish.jl</li>
<li>Weave.jl.</li>
</ul>
<p>Further, <em>Jupyter notebooks</em> are web-based interactive computational environments for creating notebook documents. It contains an ordered list of input and output cells which can contain code, Markdown text, plots, and equations.</p>


</section>

 ]]></description>
  <category>code</category>
  <category>julia</category>
  <guid>https://ruboerner.github.io/Blog/posts/Julia-and-Quarto/index.html</guid>
  <pubDate>Thu, 29 Sep 2022 22:00:00 GMT</pubDate>
  <media:content url="https://ruboerner.github.io/Blog/posts/Julia-and-Quarto/Logo.png" medium="image" type="image/png" height="90" width="144"/>
</item>
<item>
  <title>Post With Code</title>
  <dc:creator>Ralph-Uwe B√∂rner</dc:creator>
  <link>https://ruboerner.github.io/Blog/posts/post-with-code/index.html</link>
  <description><![CDATA[ 




<p>This is a post with executable code.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb1-1"><span class="fl" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">+</span> <span class="fl" style="color: #AD0000;">1</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>2</code></pre>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?%5Calpha"> math rendering works quite well.</p>



 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>julia</category>
  <guid>https://ruboerner.github.io/Blog/posts/post-with-code/index.html</guid>
  <pubDate>Thu, 29 Sep 2022 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Welcome to my Blog</title>
  <dc:creator>Ralph-Uwe B√∂rner</dc:creator>
  <link>https://ruboerner.github.io/Blog/posts/welcome/index.html</link>
  <description><![CDATA[ 




<section id="welcome" class="level1">
<h1>Welcome!</h1>
<p>This is the first post in a Quarto blog.</p>
<section id="why-quarto" class="level2">
<h2 class="anchored" data-anchor-id="why-quarto">Why Quarto?</h2>
<p>Recently, I discovered <a href="http://quarto.org">Quarto</a>, which offers a functionality that I was missing in other tools.</p>
<p></p><div id="tweet-35054"></div><script>tweet={"url":"https:\/\/twitter.com\/ruboerner\/status\/1576608085971533826","author_name":"Ralph-Uwe B√∂rner","author_url":"https:\/\/twitter.com\/ruboerner","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E. \u003Ca href=\"https:\/\/twitter.com\/quarto_pub?ref_src=twsrc%5Etfw\"\u003E@quarto_pub\u003C\/a\u003E is the discovery of the year when it comes to providing lecture material. \u003Ca href=\"https:\/\/twitter.com\/hashtag\/quartopub?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#quartopub\u003C\/a\u003E\u003C\/p\u003E&mdash; Ralph-Uwe B√∂rner (@ruboerner) \u003Ca href=\"https:\/\/twitter.com\/ruboerner\/status\/1576608085971533826?ref_src=twsrc%5Etfw\"\u003EOctober 2, 2022\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-35054").innerHTML = tweet["html"];</script><p></p>
</section>
<section id="what-is-quarto" class="level2">
<h2 class="anchored" data-anchor-id="what-is-quarto">What is Quarto?</h2>
<p>First and foremost, using Quarto one can easily deploy a website, a blog post, a presentation, a static html page, or you name it.</p>
<p>This blog is a Quarto project which I edit in <a href="http://www.rstudio.com">RStudio</a>.</p>
<p>Its sources are hosted at <a href="http://github.com/ruboerner/Blog">GitHub</a> and deployed as a static site using GitHub Pages.</p>


</section>
</section>

 ]]></description>
  <category>quarto</category>
  <guid>https://ruboerner.github.io/Blog/posts/welcome/index.html</guid>
  <pubDate>Thu, 29 Sep 2022 22:00:00 GMT</pubDate>
  <media:content url="https://ruboerner.github.io/Blog/posts/welcome/quarto.png" medium="image" type="image/png" height="44" width="144"/>
</item>
<item>
  <title>Jupyter example</title>
  <dc:creator>Ralph-Uwe B√∂rner</dc:creator>
  <link>https://ruboerner.github.io/Blog/posts/jupyter/index.html</link>
  <description><![CDATA[ 




<section id="use-jupyter-notebooks-as-quarto-blog-posts" class="level1">
<h1>Use Jupyter notebooks as Quarto blog posts</h1>
<p>This blog post has been entirely written within a Jupyter Notebook.</p>
<p>You can use existing Jupyter notebooks as blog entries with just a little modification!</p>
<p>Quarto can only render Jupyter notebooks properly when you add a YAML header as first cell of your notebook. Just make sure, that this cell is a <em>raw cell</em>.</p>
<p>Further, I have renamed the notebook to <code>index.ipynb</code> ‚Äì though I‚Äôm not sure if this is really necessary. This assumption probably fits well with the conventional <code>index.html</code> files sitting in the other blog post folders.</p>
<p>The YAML front matter of this notebook looks like this:</p>
<pre><code>---
title: "Jupyter example"
categories: [code, jupyter, quarto]
jupyter: "julia-1.8"
---</code></pre>
<p>The remaining cells are just plain Jupyter code cells.</p>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb2-1"><span class="im" style="color: #00769E;">using</span> <span class="bu" style="color: null;">Plots</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">theme</span>(<span class="op" style="color: #5E5E5E;">:</span>vibrant)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb3-1">x <span class="op" style="color: #5E5E5E;">=</span> <span class="fu" style="color: #4758AB;">range</span>(<span class="fl" style="color: #AD0000;">0.0</span>, <span class="fl" style="color: #AD0000;">2</span>œÄ, <span class="fl" style="color: #AD0000;">101</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>0.0:0.06283185307179587:6.283185307179586</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb5-1"><span class="fu" style="color: #4758AB;">plot</span>(x, <span class="fu" style="color: #4758AB;">sin</span>.(x), label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"sin(x)"</span>, xlabel<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"x"</span>, ylabel<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"y(x)"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<p><img src="https://ruboerner.github.io/Blog/posts/jupyter/index_files/figure-html/cell-4-output-1.svg" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <category>code</category>
  <category>jupyter</category>
  <category>quarto</category>
  <guid>https://ruboerner.github.io/Blog/posts/jupyter/index.html</guid>
  <pubDate>Wed, 28 Sep 2022 22:00:00 GMT</pubDate>
  <media:content url="https://ruboerner.github.io/Blog/posts/jupyter/main-logo.png" medium="image" type="image/png" height="43" width="144"/>
</item>
</channel>
</rss>
